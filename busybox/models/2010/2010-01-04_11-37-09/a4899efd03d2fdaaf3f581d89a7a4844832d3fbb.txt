2010-01-04 11:37:09 +0100
diff --git a/shell/hush.c b/shell/hush.c
index 3044024..2509465 100644
--- a/shell/hush.c
+++ b/shell/hush.c
@@ -3896,9 +3896,7 @@ static int checkjobs(struct pipe* fg_pipe)
 					fg_pipe->alive_cmds--;
 					if (i == fg_pipe->num_cmds - 1) {
 						/* last process gives overall exitstatus */
-						/* Note: is WIFSIGNALED, WEXITSTATUS = sig + 128 */
 						rcode = WEXITSTATUS(status);
-						IF_HAS_KEYWORDS(if (fg_pipe->pi_inverted) rcode = !rcode;)
 						/* bash prints killer signal's name for *last*
 						 * process in pipe (prints just newline for SIGINT).
 						 * Mimic this. Example: "sleep 5" + (^\ or kill -QUIT)
@@ -3906,7 +3904,11 @@ static int checkjobs(struct pipe* fg_pipe)
 						if (WIFSIGNALED(status)) {
 							int sig = WTERMSIG(status);
 							printf("%s\n", sig == SIGINT ? "" : get_signame(sig));
+							/* TODO: MIPS has 128 sigs (1..128), what if sig==128 here?
+							 * Maybe we need to use sig | 128? */
+							rcode = sig + 128;
 						}
+						IF_HAS_KEYWORDS(if (fg_pipe->pi_inverted) rcode = !rcode;)
 					}
 				} else {
 					fg_pipe->cmds[i].is_stopped = 1;
diff --git a/shell/hush_test/hush-misc/sig_exitcode.right b/shell/hush_test/hush-misc/sig_exitcode.right
new file mode 100644
index 0000000..d5f000a
--- /dev/null
+++ b/shell/hush_test/hush-misc/sig_exitcode.right
@@ -0,0 +1,5 @@
+KILL
+137:137
+KILL
+0:0
+Done
diff --git a/shell/hush_test/hush-misc/sig_exitcode.tests b/shell/hush_test/hush-misc/sig_exitcode.tests
new file mode 100755
index 0000000..7879dc8
--- /dev/null
+++ b/shell/hush_test/hush-misc/sig_exitcode.tests
@@ -0,0 +1,9 @@
+exec 2>&1
+
+$THIS_SH -c 'kill -9 $$'
+echo 137:$?
+
+! $THIS_SH -c 'kill -9 $$'
+echo 0:$?
+
+echo Done
