2008-06-28 04:58:55 +0000
diff --git a/coreutils/md5_sha1_sum.c b/coreutils/md5_sha1_sum.c
index c816194..8690f40 100644
--- a/coreutils/md5_sha1_sum.c
+++ b/coreutils/md5_sha1_sum.c
@@ -33,8 +33,8 @@ static uint8_t *hash_file(const char *filename, hash_algo_t hash_algo)
 	} context;
 	uint8_t *hash_value = NULL;
 	RESERVE_CONFIG_UBUFFER(in_buf, 4096);
-	void (*update)(const void*, size_t, void*);
-	void (*final)(void*, void*);
+	void FAST_FUNC (*update)(const void*, size_t, void*);
+	void FAST_FUNC (*final)(void*, void*);
 
 	src_fd = open_or_warn_stdin(filename);
 	if (src_fd < 0) {
@@ -44,13 +44,13 @@ static uint8_t *hash_file(const char *filename, hash_algo_t hash_algo)
 	/* figure specific hash algorithims */
 	if (ENABLE_MD5SUM && hash_algo==HASH_MD5) {
 		md5_begin(&context.md5);
-		update = (void (*)(const void*, size_t, void*))md5_hash;
-		final = (void (*)(void*, void*))md5_end;
+		update = (void*)md5_hash;
+		final = (void*)md5_end;
 		hash_len = 16;
 	} else if (ENABLE_SHA1SUM && hash_algo==HASH_SHA1) {
 		sha1_begin(&context.sha1);
-		update = (void (*)(const void*, size_t, void*))sha1_hash;
-		final = (void (*)(void*, void*))sha1_end;
+		update = (void*)sha1_hash;
+		final = (void*)sha1_end;
 		hash_len = 20;
 	} else {
 		bb_error_msg_and_die("algorithm not supported");
diff --git a/libbb/makedev.c b/libbb/makedev.c
index efd5122..ca71fdb 100644
--- a/libbb/makedev.c
+++ b/libbb/makedev.c
@@ -7,6 +7,7 @@
  */
 
 /* We do not include libbb.h - #define makedev() is there! */
+#include "platform.h"
 #include <features.h>
 #include <sys/sysmacros.h>
 
@@ -15,8 +16,8 @@
 /* uclibc people please check - do we need "&& !__UCLIBC__" above? */
 
 /* suppress gcc "no previous prototype" warning */
-unsigned long long bb_makedev(unsigned int major, unsigned int minor);
-unsigned long long bb_makedev(unsigned int major, unsigned int minor)
+unsigned long long FAST_FUNC bb_makedev(unsigned int major, unsigned int minor);
+unsigned long long FAST_FUNC bb_makedev(unsigned int major, unsigned int minor)
 {
 	return makedev(major, minor);
 }
