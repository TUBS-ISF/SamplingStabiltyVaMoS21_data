2008-02-11 11:44:38 +0000
diff --git a/coreutils/od_bloaty.c b/coreutils/od_bloaty.c
index 6948bf1..501a92b 100644
--- a/coreutils/od_bloaty.c
+++ b/coreutils/od_bloaty.c
@@ -360,7 +360,7 @@ print_long_double(size_t n_bytes, const char *block, const char *fmt_string)
 }
 
 /* print_[named]_ascii are optimized for speed.
- * Remember, someday you may want to pump gigabytes thru this thing.
+ * Remember, someday you may want to pump gigabytes through this thing.
  * Saving a dozen of .text bytes here is counter-productive */
 
 static void
diff --git a/editors/vi.c b/editors/vi.c
index d8492fe..ce10a60 100644
--- a/editors/vi.c
+++ b/editors/vi.c
@@ -1863,7 +1863,7 @@ static char *text_hole_make(char * p, int size)	// at "p", make a 'size' byte ho
 }
 
 //  close a hole in text[]
-static char *text_hole_delete(char * p, char * q) // delete "p" thru "q", inclusive
+static char *text_hole_delete(char * p, char * q) // delete "p" through "q", inclusive
 {
 	char *src, *dest;
 	int cnt, hole_size;
@@ -3245,7 +3245,7 @@ static void do_cmd(char c)
 		//
 		// dont separate these two commands. 'f' depends on ';'
 		//
-		//**** fall thru to ... ';'
+		//**** fall through to ... ';'
 	case ';':			// ;- look at rest of line for last forward char
 		if (cmdcnt-- > 1) {
 			do_cmd(';');
@@ -3456,7 +3456,7 @@ static void do_cmd(char c)
 		break;
 	case 'A':			// A- append at e-o-l
 		dot_end();		// go to e-o-l
-		//**** fall thru to ... 'a'
+		//**** fall through to ... 'a'
 	case 'a':			// a- append after current char
 		if (*dot != '\n')
 			dot++;
@@ -3511,7 +3511,7 @@ static void do_cmd(char c)
 	case 'I':			// I- insert before first non-blank
 		dot_begin();	// 0
 		dot_skip_over_ws();
-		//**** fall thru to ... 'i'
+		//**** fall through to ... 'i'
 	case 'i':			// i- insert before current char
 	case VI_K_INSERT:	// Cursor Key Insert
  dc_i:
diff --git a/findutils/grep.c b/findutils/grep.c
index 4c9582e..1094dcc 100644
--- a/findutils/grep.c
+++ b/findutils/grep.c
@@ -229,7 +229,7 @@ static int grep_file(FILE *file)
 				/* if we're just printing filenames, we stop after the first match */
 				if (PRINT_FILES_WITH_MATCHES) {
 					puts(cur_file);
-					/* fall thru to "return 1" */
+					/* fall through to "return 1" */
 				}
 				/* OPT_L aka PRINT_FILES_WITHOUT_MATCHES: return early */
 				return 1; /* one match */
diff --git a/libbb/dump.c b/libbb/dump.c
index 71e35c6..5e43d42 100644
--- a/libbb/dump.c
+++ b/libbb/dump.c
@@ -100,7 +100,7 @@ static void rewrite(FS * fs)
 			if (!fu->nextpr)
 				fu->nextpr = pr;
 			/* ignore nextpr -- its unused inside the loop and is
-			 * uninitialized 1st time thru.
+			 * uninitialized 1st time through.
 			 */
 
 			/* bb_dump_skip preceding text and up to the next % sign */
diff --git a/networking/Config.in b/networking/Config.in
index ed87a17..5a25d6d 100644
--- a/networking/Config.in
+++ b/networking/Config.in
@@ -689,7 +689,7 @@ config FETCHMAIL
 	bool "fetchmail"
 	default n
 	help
-	  Barebones fetchmail.
+	  Barebone fetchmail.
 
 config FEATURE_FETCHMAIL_APOP
 	bool "Support APOP authentication"
@@ -699,11 +699,11 @@ config FEATURE_FETCHMAIL_APOP
 	  Support secure APOP authentication.
 
 config FEATURE_FETCHMAIL_FILTER
-	bool "Pipe thru external filter"
+	bool "Pipe through external filter"
 	default n
 	depends on FETCHMAIL
 	help
-	  Support piping incoming messages thru external filter.
+	  Support piping incoming messages through external filter.
 
 config SLATTACH
 	bool "slattach"
diff --git a/networking/nc_bloaty.c b/networking/nc_bloaty.c
index 0b9428b..206c5e5 100644
--- a/networking/nc_bloaty.c
+++ b/networking/nc_bloaty.c
@@ -77,7 +77,7 @@ struct globals {
 	unsigned wrote_out;          /* total stdout bytes */
 	unsigned wrote_net;          /* total net bytes */
 #endif
-	/* ouraddr is never NULL and goes thru three states as we progress:
+	/* ouraddr is never NULL and goes through three states as we progress:
 	 1 - local address before bind (IP/port possibly zero)
 	 2 - local address after bind (port is nonzero)
 	 3 - local address after connect??/recv/accept (IP and port are nonzero) */
diff --git a/networking/sendmail.c b/networking/sendmail.c
index 5dababc..63305d1 100644
--- a/networking/sendmail.c
+++ b/networking/sendmail.c
@@ -481,12 +481,12 @@ int sendgetmail_main(int argc, char **argv)
 		// make tempnam(dir, salt) respect dir argument
 		unsetenv("TMPDIR");
 
-		// TODO: piping thru external filter argv... if *argv
+		// TODO: piping through external filter argv... if *argv
 
 		// cache fetch command
 	{
 		const char *retr = (opts & OPTF_t) ? "TOP %u 0" : "RETR %u";
-		// loop thru messages
+		// loop through messages
 		for (; nmsg; nmsg--) {
 			int fd;
 			char tmp_name[sizeof("tmp/XXXXXX")];
diff --git a/networking/wget.c b/networking/wget.c
index 6c1c385..36a8356 100644
--- a/networking/wget.c
+++ b/networking/wget.c
@@ -614,7 +614,7 @@ int wget_main(int argc, char **argv)
 			case 206:
 				if (beg_range)
 					break;
-				/*FALLTHRU*/
+				/* fall through */
 			default:
 				/* Show first line only and kill any ESC tricks */
 				buf[strcspn(buf, "\n\r\x1b")] = '\0';
@@ -685,7 +685,7 @@ int wget_main(int argc, char **argv)
 		case 331:
 			if (ftpcmd("PASS ", str, sfp, buf) == 230)
 				break;
-			/* FALLTHRU (failed login) */
+			/* fall through (failed login) */
 		default:
 			bb_error_msg_and_die("ftp login: %s", buf+4);
 		}
diff --git a/procps/top.c b/procps/top.c
index 37b6a0c..a47150e 100644
--- a/procps/top.c
+++ b/procps/top.c
@@ -450,7 +450,7 @@ static NOINLINE void display_process_list(int count, int scr_width)
 #endif
 
 	scr_width += 2; /* account for leading '\n' and trailing NUL */
-	/* Ok, all preliminary data is ready, go thru the list */
+	/* Ok, all preliminary data is ready, go through the list */
 	while (count-- > 0) {
 		unsigned col;
 		CALC_STAT(pmem, (s->vsz*pmem_scale + pmem_half) >> pmem_shift);
diff --git a/scripts/kconfig/zconf.tab.c_shipped b/scripts/kconfig/zconf.tab.c_shipped
index 97100b7..b62724d 100644
--- a/scripts/kconfig/zconf.tab.c_shipped
+++ b/scripts/kconfig/zconf.tab.c_shipped
@@ -1100,7 +1100,7 @@ yyparse ()
      `yyvs': related to semantic values,
      `yyls': related to locations.
 
-     Refer to the stacks thru separate pointers, to allow yyoverflow
+     Refer to the stacks through separate pointers, to allow yyoverflow
      to reallocate them elsewhere.  */
 
   /* The state stack.  */
