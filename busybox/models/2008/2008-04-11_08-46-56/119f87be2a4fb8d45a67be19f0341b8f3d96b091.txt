2008-04-11 08:46:56 +0000
diff --git a/scripts/Makefile.IMA b/scripts/Makefile.IMA
index 1d7bc2c..762e252 100644
--- a/scripts/Makefile.IMA
+++ b/scripts/Makefile.IMA
@@ -6,12 +6,42 @@ objtree		:= $(CURDIR)
 src		:= $(srctree)
 obj		:= $(objtree)
 
+# Look for make include files relative to root of kernel src
+MAKEFLAGS += --include-dir=$(srctree)
+
 default: busybox
+
+ifndef HOSTCC
+HOSTCC = cc
+endif
+AS              = $(CROSS_COMPILE)as
+CC              = $(CROSS_COMPILE)gcc
+LD              = $(CC) -nostdlib
+CPP             = $(CC) -E
+AR              = $(CROSS_COMPILE)ar
+NM              = $(CROSS_COMPILE)nm
+STRIP           = $(CROSS_COMPILE)strip
+OBJCOPY         = $(CROSS_COMPILE)objcopy
+OBJDUMP         = $(CROSS_COMPILE)objdump
+
+CFLAGS := $(CFLAGS)
+CPPFLAGS+= -D"KBUILD_STR(s)=\#s" #-Q
+WHOLE_PROGRAM:=$(call cc-option,-fwhole-program,)
+
 include .config
+# We need some generic definitions
+include $(srctree)/scripts/Kbuild.include
+
+include Makefile.flags
 ifdef CONFIG_FEATURE_COMPRESS_USAGE
 usage_stuff = include/usage_compressed.h
 endif
 
+ifndef BB_VER
+BB_VER:=""
+endif
+
+
 # pull in the config stuff
 lib-all-y := applets/applets.o
 lib-y:=
@@ -90,6 +120,9 @@ lib-y:=
 include util-linux/Kbuild
 lib-all-y += $(patsubst %,util-linux/%,$(sort $(lib-y)))
 lib-y:=
+include util-linux/volume_id/Kbuild
+lib-all-y += $(patsubst %,util-linux/volume_id/%,$(sort $(lib-y)))
+lib-y:=
 include init/Kbuild
 lib-all-y += $(patsubst %,init/%,$(sort $(lib-y)))
 lib-y:=
@@ -99,6 +132,9 @@ lib-y:=
 include editors/Kbuild
 lib-all-y += $(patsubst %,editors/%,$(sort $(lib-y)))
 lib-y:=
+include printutils/Kbuild
+lib-all-y += $(patsubst %,printutils/%,$(sort $(lib-y)))
+lib-y:=
 include selinux/Kbuild
 lib-all-y += $(patsubst %,selinux/%,$(sort $(lib-y)))
 lib-y:=
@@ -109,25 +145,6 @@ include libbb/Kbuild
 lib-all-y += $(patsubst %,libbb/%,$(sort $(lib-y)))
 lib-y:=
 
-include Makefile.flags
-ifndef BB_VER
-BB_VER:=""
-endif
-
-CPPFLAGS+= -D"KBUILD_STR(s)=\#s" #-Q
-
-HOSTCC = gcc
-AS              = $(CROSS_COMPILE)as
-CC              = $(CROSS_COMPILE)gcc
-LD              = $(CC) -nostdlib
-CPP             = $(CC) -E
-AR              = $(CROSS_COMPILE)ar
-NM              = $(CROSS_COMPILE)nm
-STRIP           = $(CROSS_COMPILE)strip
-OBJCOPY         = $(CROSS_COMPILE)objcopy
-OBJDUMP         = $(CROSS_COMPILE)objdump
-
-WHOLE_PROGRAM:=$(call cc-option,-fwhole-program,)
 busybox: $(usage_stuff)
 	$(CC) $(CPPFLAGS) $(CFLAGS) $(EXTRA_CFLAGS) --combine $(WHOLE_PROGRAM) \
 		-funit-at-a-time -Wno-error -std=gnu99  \
