2008-09-27 14:03:25 +0000
diff --git a/e2fsprogs/old_e2fsprogs/ext2fs/res_gdt.c b/e2fsprogs/old_e2fsprogs/ext2fs/res_gdt.c
index f7ee8b1..31cc89e 100644
--- a/e2fsprogs/old_e2fsprogs/ext2fs/res_gdt.c
+++ b/e2fsprogs/old_e2fsprogs/ext2fs/res_gdt.c
@@ -113,7 +113,7 @@ errcode_t ext2fs_create_resize_inode(ext2_filsys fs)
 		inode_size *= fs->blocksize;
 		inode.i_size = inode_size & 0xFFFFFFFF;
 		inode.i_size_high = (inode_size >> 32) & 0xFFFFFFFF;
-		if(inode.i_size_high) {
+		if (inode.i_size_high) {
 			sb->s_feature_ro_compat |=
 				EXT2_FEATURE_RO_COMPAT_LARGE_FILE;
 		}
diff --git a/e2fsprogs/old_e2fsprogs/mke2fs.c b/e2fsprogs/old_e2fsprogs/mke2fs.c
index 852c249..6ffad35 100644
--- a/e2fsprogs/old_e2fsprogs/mke2fs.c
+++ b/e2fsprogs/old_e2fsprogs/mke2fs.c
@@ -676,7 +676,7 @@ static int set_os(struct ext2_super_block *sb, char *os)
 		return 1;
 	}
 
-	if((sb->s_creator_os = e2p_string2os(os)) >= 0) {
+	if ((sb->s_creator_os = e2p_string2os(os)) >= 0) {
 		return 1;
 	} else if (!strcasecmp("GNU", os)) {
 		sb->s_creator_os = EXT2_OS_HURD;
@@ -1187,7 +1187,7 @@ int mke2fs_main (int argc, char **argv)
 
 	if (ENABLE_FEATURE_CLEAN_UP)
 		atexit(mke2fs_clean_up);
-	if(!PRS(argc, argv))
+	if (!PRS(argc, argv))
 		return 0;
 
 #ifdef CONFIG_TESTIO_DEBUG
diff --git a/e2fsprogs/old_e2fsprogs/util.c b/e2fsprogs/old_e2fsprogs/util.c
index b30c294..ce49db9 100644
--- a/e2fsprogs/old_e2fsprogs/util.c
+++ b/e2fsprogs/old_e2fsprogs/util.c
@@ -37,7 +37,7 @@ void check_plausibility(const char *device, int force)
 	val = stat(device, &s);
 	if (force)
 		return;
-	if(val == -1)
+	if (val == -1)
 		bb_perror_msg_and_die("cannot stat %s", device);
 	if (!S_ISBLK(s.st_mode)) {
 		printf("%s is not a block special device.\n", device);
@@ -220,13 +220,13 @@ void make_journal_device(char *journal_device, ext2_filsys fs, int quiet, int fo
 					fs->blocksize, io_ptr, &jfs);
 	if (retval)
 		bb_error_msg_and_die("cannot journal device %s", journal_device);
-	if(!quiet)
+	if (!quiet)
 		printf("Adding journal to device %s: ", journal_device);
 	fflush(stdout);
 	retval = ext2fs_add_journal_device(fs, jfs);
-	if(retval)
+	if (retval)
 		bb_error_msg_and_die("\nFailed to add journal to device %s", journal_device);
-	if(!quiet)
+	if (!quiet)
 		puts("done");
 	ext2fs_close(jfs);
 }
@@ -242,14 +242,14 @@ void make_journal_blocks(ext2_filsys fs, int journal_size, int journal_flags, in
 			~EXT3_FEATURE_COMPAT_HAS_JOURNAL;
 		return;
 	}
-	if(!quiet)
+	if (!quiet)
 		printf("Creating journal (%ld blocks): ", journal_blocks);
 	fflush(stdout);
 	retval = ext2fs_add_journal_inode(fs, journal_blocks,
 						  journal_flags);
-	if(retval)
+	if (retval)
 		bb_error_msg_and_die("cannot create journal");
-	if(!quiet)
+	if (!quiet)
 		puts("done");
 }
 
@@ -262,6 +262,6 @@ char *e2fs_set_sbin_path(void)
 		oldpath = xasprintf("%s:%s", PATH_SET, oldpath);
 	 else
 		oldpath = PATH_SET;
-	putenv (oldpath);
+	putenv(oldpath);
 	return oldpath;
 }
diff --git a/miscutils/hdparm.c b/miscutils/hdparm.c
index b75da16..5c1f6d5 100644
--- a/miscutils/hdparm.c
+++ b/miscutils/hdparm.c
@@ -1759,7 +1759,7 @@ static void process_dev(char *devname)
 		}
 	}
 	if (get_unmask) {
-		if(!ioctl_or_warn(fd, HDIO_GET_UNMASKINTR, &parm))
+		if (!ioctl_or_warn(fd, HDIO_GET_UNMASKINTR, &parm))
 			print_value_on_off("unmaskirq", parm);
 	}
 
@@ -1777,25 +1777,25 @@ static void process_dev(char *devname)
 #endif
 #ifdef HDIO_GET_QDMA
 	if (get_dma_q) {
-		if(!ioctl_or_warn(fd, HDIO_GET_QDMA, &parm))
+		if (!ioctl_or_warn(fd, HDIO_GET_QDMA, &parm))
 			print_value_on_off("queue_depth", parm);
 	}
 #endif
 	if (get_keep) {
-		if(!ioctl_or_warn(fd, HDIO_GET_KEEPSETTINGS, &parm))
+		if (!ioctl_or_warn(fd, HDIO_GET_KEEPSETTINGS, &parm))
 			print_value_on_off("keepsettings", parm);
 	}
 
 	if (get_nowerr) {
-		if(!ioctl_or_warn(fd, HDIO_GET_NOWERR, &parm))
+		if (!ioctl_or_warn(fd, HDIO_GET_NOWERR, &parm))
 			print_value_on_off("nowerr", parm);
 	}
 	if (get_readonly) {
-		if(!ioctl_or_warn(fd, BLKROGET, &parm))
+		if (!ioctl_or_warn(fd, BLKROGET, &parm))
 			print_value_on_off("readonly", parm);
 	}
 	if (get_readahead) {
-		if(!ioctl_or_warn(fd, BLKRAGET, &parm))
+		if (!ioctl_or_warn(fd, BLKRAGET, &parm))
 			print_value_on_off("readahead", parm);
 	}
 	if (get_geom) {
diff --git a/shell/ash.c b/shell/ash.c
index d63acc2..0878237 100644
--- a/shell/ash.c
+++ b/shell/ash.c
@@ -5980,7 +5980,7 @@ subevalvar(char *p, char *str, int strloc, int subtype,
 
 			/* We must adjust the length by the number of escapes we find. */
 			for (ptr = startp; ptr < (str - 1); ptr++) {
-				if(*ptr == CTLESC) {
+				if (*ptr == CTLESC) {
 					len--;
 					ptr++;
 				}
@@ -6056,7 +6056,7 @@ subevalvar(char *p, char *str, int strloc, int subtype,
 	if (subtype == VSREPLACE || subtype == VSREPLACEALL) {
 		char *idx, *end, *restart_detect;
 
-		if(!repl) {
+		if (!repl) {
 			repl = parse_sub_pattern(str, varflags & VSQUOTE);
 			if (!repl)
 				repl = &null;
