2008-04-27 22:06:24 +0000
diff --git a/applets/install.sh b/applets/install.sh
index e94b2b9..32049b1 100755
--- a/applets/install.sh
+++ b/applets/install.sh
@@ -37,7 +37,7 @@ if [ -n "$DO_INSTALL_LIBS" ] && [ "$DO_INSTALL_LIBS" != "n" ]; then
 	for i in $DO_INSTALL_LIBS; do
 		rm -f $prefix/$libdir/$i || exit 1
 		if [ -f $i ]; then
-			cp -a $i $prefix/$libdir/ || exit 1
+			cp -pPR $i $prefix/$libdir/ || exit 1
 			chmod 0644 $prefix/$libdir/$i || exit 1
 		fi
 	done
diff --git a/coreutils/cp.c b/coreutils/cp.c
index a4eea94..40d3625 100644
--- a/coreutils/cp.c
+++ b/coreutils/cp.c
@@ -37,25 +37,27 @@ int cp_main(int argc, char **argv)
 		OPT_r = 1 << (sizeof(FILEUTILS_CP_OPTSTR)),
 		OPT_P = 1 << (sizeof(FILEUTILS_CP_OPTSTR)+1),
 		OPT_H = 1 << (sizeof(FILEUTILS_CP_OPTSTR)+2),
-		OPT_L = 1 << (sizeof(FILEUTILS_CP_OPTSTR)+3),
 	};
 
 	// Need at least two arguments
-	// Soft- and hardlinking don't mix
+	// Soft- and hardlinking doesn't mix
 	// -P and -d are the same (-P is POSIX, -d is GNU)
 	// -r and -R are the same
 	// -R (and therefore -r) turns on -d (coreutils does this)
 	// -a = -pdR
-	opt_complementary = "-2:l--s:s--l:Pd:rRd:Rd:apdR";
-	flags = getopt32(argv, FILEUTILS_CP_OPTSTR "arPHL");
+	opt_complementary = "-2:l--s:s--l:Pd:rRd:Rd:apdR:HL";
+	flags = getopt32(argv, FILEUTILS_CP_OPTSTR "arPH");
 	argc -= optind;
 	argv += optind;
-	flags ^= FILEUTILS_DEREFERENCE;		/* The sense of this flag was reversed. */
-	/* Default behavior of cp is to dereference, so we don't have to do
-	 * anything special when we are given -L.
-	 * The behavior of -H is *almost* like -L, but not quite, so let's
-	 * just ignore it too for fun.
-	if (flags & OPT_L) ...
+	flags ^= FILEUTILS_DEREFERENCE; /* the sense of this flag was reversed */
+	/* coreutils 6.9 compat:
+	 * by default, "cp" derefs symlinks (creates regular dest files),
+	 * but "cp -R" does not. We switch off deref if -r or -R (see above).
+	 * However, "cp -RL" must still deref symlinks: */
+	if (flags & FILEUTILS_DEREF_SOFTLINK) /* -L */
+		flags |= FILEUTILS_DEREFERENCE;
+	/* The behavior of -H is *almost* like -L, but not quite, so let's
+	 * just ignore it too for fun. TODO.
 	if (flags & OPT_H) ... // deref command-line params only
 	*/
 
diff --git a/include/libbb.h b/include/libbb.h
index 7a8bfdf..dfcc96d 100644
--- a/include/libbb.h
+++ b/include/libbb.h
@@ -231,12 +231,13 @@ enum {	/* DO NOT CHANGE THESE VALUES!  cp.c, mv.c, install.c depend on them. */
 	FILEUTILS_INTERACTIVE = 0x10,
 	FILEUTILS_MAKE_HARDLINK = 0x20,
 	FILEUTILS_MAKE_SOFTLINK = 0x40,
+	FILEUTILS_DEREF_SOFTLINK = 0x80,
 #if ENABLE_SELINUX
-	FILEUTILS_PRESERVE_SECURITY_CONTEXT = 0x80,
-	FILEUTILS_SET_SECURITY_CONTEXT = 0x100
+	FILEUTILS_PRESERVE_SECURITY_CONTEXT = 0x100,
+	FILEUTILS_SET_SECURITY_CONTEXT = 0x200
 #endif
 };
-#define FILEUTILS_CP_OPTSTR "pdRfils" USE_SELINUX("c")
+#define FILEUTILS_CP_OPTSTR "pdRfilsL" USE_SELINUX("c")
 extern int remove_file(const char *path, int flags);
 /* NB: without FILEUTILS_RECUR in flags, it will basically "cat"
  * the source, not copy (unless "source" is a directory).
diff --git a/testsuite/cp/cp-RHL-does_not_preserve-links b/testsuite/cp/cp-RHL-does_not_preserve-links
new file mode 100644
index 0000000..eed6c3e
--- /dev/null
+++ b/testsuite/cp/cp-RHL-does_not_preserve-links
@@ -0,0 +1,6 @@
+mkdir a
+>a/file
+ln -s file a/link
+busybox cp -RHL a b
+test ! -L b/link
+#sh </dev/tty >/dev/tty 2>&1
