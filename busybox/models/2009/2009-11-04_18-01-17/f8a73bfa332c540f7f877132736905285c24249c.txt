2009-11-04 18:01:17 +0100
diff --git a/modutils/lsmod.c b/modutils/lsmod.c
index 50a7897..582503b 100644
--- a/modutils/lsmod.c
+++ b/modutils/lsmod.c
@@ -7,7 +7,6 @@
  *
  * Licensed under GPLv2 or later, see file LICENSE in this tarball for details.
  */
-
 #include "libbb.h"
 #include "unicode.h"
 
@@ -47,9 +46,9 @@ int lsmod_main(int argc UNUSED_PARAM, char **argv UNUSED_PARAM)
 #if ENABLE_FEATURE_LSMOD_PRETTY_2_6_OUTPUT
 	char *token[4];
 	parser_t *parser = config_open("/proc/modules");
-#if ENABLE_FEATURE_ASSUME_UNICODE
+# if ENABLE_FEATURE_ASSUME_UNICODE
 	size_t name_len;
-#endif
+# endif
 	check_unicode_in_env();
 
 	printf("%-24sSize  Used by", "Module");
@@ -64,13 +63,13 @@ int lsmod_main(int argc UNUSED_PARAM, char **argv UNUSED_PARAM)
 				token[3][strlen(token[3])-1] = '\0';
 			} else
 				token[3] = (char *) "";
-#if ENABLE_FEATURE_ASSUME_UNICODE
+# if ENABLE_FEATURE_ASSUME_UNICODE
 			name_len = bb_mbstrlen(token[0]);
 			name_len = (name_len > 19) ? 0 : 19 - name_len;
 			printf("%s%*s %8s %2s %s\n", token[0], name_len, "", token[1], token[2], token[3]);
-#else
+# else
 			printf("%-19s %8s %2s %s\n", token[0], token[1], token[2], token[3]);
-#endif
+# endif
 		}
 	} else {
 		while (config_read(parser, token, 4, 4, "# \t", PARSE_NORMAL & ~PARSE_GREEDY)) {
@@ -78,13 +77,13 @@ int lsmod_main(int argc UNUSED_PARAM, char **argv UNUSED_PARAM)
 			// or comma-separated list ended by comma
 			// so trimming the trailing char is just what we need!
 			token[3][strlen(token[3])-1] = '\0';
-#if ENABLE_FEATURE_ASSUME_UNICODE
+# if ENABLE_FEATURE_ASSUME_UNICODE
 			name_len = bb_mbstrlen(token[0]);
 			name_len = (name_len > 19) ? 0 : 19 - name_len;
 			printf("%s%*s %8s %2s %s\n", token[0], name_len, "", token[1], token[2], token[3]);
-#else
+# else
 			printf("%-19s %8s %2s %s\n", token[0], token[1], token[2], token[3]);
-#endif
+# endif
 		}
 	}
 	if (ENABLE_FEATURE_CLEAN_UP)
