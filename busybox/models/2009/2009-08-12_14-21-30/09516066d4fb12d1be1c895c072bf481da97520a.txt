2009-08-12 14:21:30 +0200
diff --git a/shell/hush_test/hush-leak/leak_argv1.right b/shell/hush_test/hush-leak/leak_argv1.right
index 7bccc1e..1d4d6ff 100644
--- a/shell/hush_test/hush-leak/leak_argv1.right
+++ b/shell/hush_test/hush-leak/leak_argv1.right
@@ -1,2 +1,2 @@
 Measuring memory leak...
-vsz does not grow
+Ok
diff --git a/shell/hush_test/hush-leak/leak_argv1.tests b/shell/hush_test/hush-leak/leak_argv1.tests
index 34991ce..bb371bc 100755
--- a/shell/hush_test/hush-leak/leak_argv1.tests
+++ b/shell/hush_test/hush-leak/leak_argv1.tests
@@ -1,7 +1,4 @@
-pid=$$
-
 # Warm up
-beg=`ps -o pid,vsz | grep "^ *$pid "`
 i=1
 while test $i != X; do
     set -- a b c d e f g h i j k l m n o p q r s t u v w x y z
@@ -33,50 +30,12 @@ while test $i != X; do
     if test $i = 111111111111111111111111111111111111111111111i; then i=j; fi
     if test $i = 111111111111111111111111111111111111111111111j; then i=X; fi
 done
-end=`ps -o pid,vsz | grep "^ *$pid "`
 
-# Warm up again (I do need it on my machine)
-beg=`ps -o pid,vsz | grep "^ *$pid "`
-i=1
-while test $i != X; do
-    set -- a b c d e f g h i j k l m n o p q r s t u v w x y z
-    shift
-    shift 2
-    shift 5
-    shift 11
-    set -- A B C D E F G H I J K L M N O P Q R S T U V W X Y Z
-    shift 3
-    shift 7
-    i=1$i
-    if test $i = 1111111111111111111111111111111111111111111111; then i=2; fi
-    if test $i = 1111111111111111111111111111111111111111111112; then i=3; fi
-    if test $i = 1111111111111111111111111111111111111111111113; then i=4; fi
-    if test $i = 1111111111111111111111111111111111111111111114; then i=5; fi
-    if test $i = 1111111111111111111111111111111111111111111115; then i=6; fi
-    if test $i = 1111111111111111111111111111111111111111111116; then i=7; fi
-    if test $i = 1111111111111111111111111111111111111111111117; then i=8; fi
-    if test $i = 1111111111111111111111111111111111111111111118; then i=9; fi
-    if test $i = 1111111111111111111111111111111111111111111119; then i=a; fi
-    if test $i = 111111111111111111111111111111111111111111111a; then i=b; fi
-    if test $i = 111111111111111111111111111111111111111111111b; then i=c; fi
-    if test $i = 111111111111111111111111111111111111111111111c; then i=d; fi
-    if test $i = 111111111111111111111111111111111111111111111d; then i=e; fi
-    if test $i = 111111111111111111111111111111111111111111111e; then i=f; fi
-    if test $i = 111111111111111111111111111111111111111111111f; then i=g; fi
-    if test $i = 111111111111111111111111111111111111111111111g; then i=h; fi
-    if test $i = 111111111111111111111111111111111111111111111h; then i=i; fi
-    if test $i = 111111111111111111111111111111111111111111111i; then i=j; fi
-    if test $i = 111111111111111111111111111111111111111111111j; then i=X; fi
-done
-end=`ps -o pid,vsz | grep "^ *$pid "`
-if test "$beg" != "$end"; then
-    true echo "vsz grows: $beg -> $end"
-else
-    true echo "vsz does not grow"
-fi
+unset i
+set --
+memleak
 
 echo "Measuring memory leak..."
-beg=`ps -o pid,vsz | grep "^ *$pid "`
 i=1
 while test $i != X; do
     set -- a b c d e f g h i j k l m n o p q r s t u v w x y z
@@ -108,10 +67,14 @@ while test $i != X; do
     if test $i = 111111111111111111111111111111111111111111111i; then i=j; fi
     if test $i = 111111111111111111111111111111111111111111111j; then i=X; fi
 done
-end=`ps -o pid,vsz | grep "^ *$pid "`
 
-if test "$beg" != "$end"; then
-    echo "vsz grows: $beg -> $end"
+unset i
+set --
+memleak
+
+kb=$?
+if test $kb -le 4; then
+    echo Ok #$kb
 else
-    echo "vsz does not grow"
+    echo "Bad: $kb kb leaked"
 fi
diff --git a/shell/hush_test/hush-parsing/negate.right b/shell/hush_test/hush-parsing/negate.right
index 0116601..61d2ecd 100644
--- a/shell/hush_test/hush-parsing/negate.right
+++ b/shell/hush_test/hush-parsing/negate.right
@@ -33,3 +33,4 @@ c 1
 1
 1
 1
+Done
diff --git a/shell/hush_test/hush-parsing/negate.tests b/shell/hush_test/hush-parsing/negate.tests
index c25127d..51151cb 100755
--- a/shell/hush_test/hush-parsing/negate.tests
+++ b/shell/hush_test/hush-parsing/negate.tests
@@ -7,10 +7,13 @@ if ! false; then false; echo $?; fi
 echo $?
 if ! false; then ! false; echo $?; fi
 echo $?
+PRINTF=`which printf`
 for a in ! a b c; do echo $a; done
 for a in ! a b c; do ! printf "$a "; echo $?; done
-for a in ! a b c; do ! /usr/bin/printf "$a "; echo $?; done
+test x"$PRINTF" = x"" && exit 1
+for a in ! a b c; do ! "$PRINTF" "$a "; echo $?; done
 for a in ! a b c; do ! printf "$a " | false; echo $?; done
 for a in ! a b c; do ! printf "$a " | true; echo $?; done
 for a in ! a b c; do ! { printf "$a " | false; }; echo $?; done
 for a in ! a b c; do ! { printf "$a " | true; }; echo $?; done
+echo Done
