2009-08-30 19:57:49 +0200
diff --git a/libbb/appletlib.c b/libbb/appletlib.c
index 48a8bb6..814b8bc 100644
--- a/libbb/appletlib.c
+++ b/libbb/appletlib.c
@@ -116,7 +116,8 @@ void FAST_FUNC bb_show_usage(void)
 			full_write2_str(p);
 			full_write2_str("\n\n");
 		}
-		dealloc_usage_messages((char*)usage_string);
+		if (ENABLE_FEATURE_CLEAN_UP)
+			dealloc_usage_messages((char*)usage_string);
 #else
 		const char *p;
 		const char *usage_string = p = unpack_usage_messages();
@@ -129,7 +130,7 @@ void FAST_FUNC bb_show_usage(void)
 			ap--;
 		}
 		full_write2_str(bb_banner);
-		full_write2_str(" multi-call binary\n");
+		full_write2_str(" multi-call binary.\n");
 		if (*p == '\b')
 			full_write2_str("\nNo help available.\n\n");
 		else {
@@ -139,7 +140,8 @@ void FAST_FUNC bb_show_usage(void)
 			full_write2_str(p);
 			full_write2_str("\n\n");
 		}
-		dealloc_usage_messages((char*)usage_string);
+		if (ENABLE_FEATURE_CLEAN_UP)
+			dealloc_usage_messages((char*)usage_string);
 #endif
 	}
 	xfunc_die();
@@ -643,8 +645,9 @@ static int busybox_main(char **argv)
 		}
 
 		dup2(1, 2);
-		full_write2_str(bb_banner); /* reuse const string... */
-		full_write2_str(" multi-call binary\n"
+		full_write2_str(bb_banner); /* reuse const string */
+		full_write2_str(" multi-call binary.\n"); /* reuse */
+		full_write2_str(
 		       "Copyright (C) 1998-2009 Erik Andersen, Rob Landley, Denys Vlasenko\n"
 		       "and others. Licensed under GPLv2.\n"
 		       "See source distribution for full notice.\n"
@@ -655,7 +658,7 @@ static int busybox_main(char **argv)
 		       "\tBusyBox is a multi-call binary that combines many common Unix\n"
 		       "\tutilities into a single executable.  Most people will create a\n"
 		       "\tlink to busybox for each function they wish to use and BusyBox\n"
-		       "\twill act like whatever it was invoked as!\n"
+		       "\twill act like whatever it was invoked as.\n"
 		       "\n"
 		       "Currently defined functions:\n");
 		col = 0;
